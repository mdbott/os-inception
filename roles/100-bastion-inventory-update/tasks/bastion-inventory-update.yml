---

- name:
  os_server_facts:
    auth:
      auth_url: "{{ os_cluster_keystone_adminurl }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_ssh_pass }}"
      project_name: "{{ os_project }}"
    server: "{{ prefix}}-{{ node_type}}"
  environment:
    OS_PROJECT_NAME: "{{ os_project }}"
    OS_PROJECT_ID: "{{ devcloud_project_id }}"
    OS_PROJECT_DOMAIN_NAME: "{{ admin_user_domain_name }}"
  tags:
    - bastion-inventory
    - bastion-deploy

- debug:
    var: openstack_servers[0].interface_ip
  tags:
    - bastion-facts

- name: set the bastion_float fact
  set_fact:
    bastion_float: "{{ openstack_servers[0].interface_ip }}"
  tags:
    - bastion-inventory
    - bastion-deploy

- name: Ensure ssh confguration is present
  blockinfile:
    dest: ~/.ssh/config
    state: "{{ new_state }}"
    create: yes
    marker: "# {mark} {{ os_project }} access"
    content: |
      Host {{ bastion_float }}
        User {{ bastion_user }}
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null
        IdentityFile ~/.ssh/id_rsa.osdev{{ os_project }}
      Host {{ prefix }}-{{ node_type }}.{{ domain_name }}
        User {{ bastion_user }}
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null
        IdentityFile ~/.ssh/id_rsa.osdev{{ os_project }}
      Host {{ prefix }}-{{ node_type }}
        User {{ bastion_user }}
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null
        IdentityFile ~/.ssh/id_rsa.osdev{{ os_project }}
  become: false
  tags:
    - bastion-inventory
    - bastion-deploy

- name: Update /etc/hosts with bastion nodes
  lineinfile:
    dest: /etc/hosts
    regexp: '{{ bastion_float }}.*'
    line: '{{ bastion_float }} {{ prefix }}-{{ node_type }}.{{ domain_name }} {{ prefix }}-{{ node_type }}'
    state: "{{ new_state }}"
  become: true
  tags:
    - bastion-inventory
    - bastion-deploy

- name: Ensure the bastion instance is {{ new_state }} in the bastion group
  add_host:
    hostname: "{{ prefix }}-{{ node_type }}"
    ansible_ssh_host: "{{ bastion_float }}"
    ansible_ssh_user: cloud-user
    become_user: root
    become_method: sudo
    groups:
      - bastion
  tags:
    - bastion-inventory
    - bastion-deploy

- name: Wait for the bastion instance to become accessable
  wait_for:
    port: 22
    host: "{{ bastion_float }}"
    search_regex: "OpenSSH"
    delay: 10
  tags:
    - bastion-inventory
    - bastion-deploy
  when: new_state=='present'
