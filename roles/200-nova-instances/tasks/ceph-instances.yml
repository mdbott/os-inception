---

- name: Ensure {{ node_type }} instances for project {{ os_project }} are present
  os_server:
    state: "present"
    cloud: "{{ os_cluster }}"
    cacert: "{{ cacertfile }}"
    name: "{{ prefix}}-{{ node_type}}-{{ item }}"
    image: "{{ nodes[node_type].image }}"
    key_name: "{{ key_name }}"
    timeout: "{{ instance_creation_timeout }}"
    wait: "{{ nodes[node_type].wait }}"
    flavor: "{{ nodes[node_type].flavor }}"
    auto_ip: "{{ nodes[node_type].auto_ip }}"
    security_groups: "{{ nodes[node_type].secgroup }}"
    availability_zone: "{{ instance_az }}"
    nics:
      - port-name: "{{ prefix }}_external_{{ node_type }}_{{ item }}"
      - port-name: "{{ prefix }}_storage_{{ node_type }}_{{ item }}"
      - port-name: "{{ prefix }}_storagemgmt_{{ node_type }}_{{ item }}"
    meta:
      group: "{{ node_type }}"
  when: use_existing_ceph == "false" and instances | select('match', '.*ceph.*') | list | length < 3 and new_state=="present"
  with_sequence:
    count="{{nodes[node_type].count}}"
  tags:
    - instances
    - ceph-instances
    - infrastructure

- name: Ensure {{ node_type }} cinder volumes for project {{ os_project }} are present
  os_volume:
    state: "present"
    cloud: "{{ os_cluster }}"
    cacert: "{{ cacertfile }}"
    display_name: "{{ prefix}}-{{ node_type}}-{{ item[0]}}-v{{ item[1]}}"
    size: "{{ nodes[node_type].volsize }}"
    availability_zone: "{{ instance_az }}"
#  when: use_existing_ceph == "false" and openstack_servers | length < 13 and new_state=="present"
  when: use_existing_ceph == "false" and new_state=="present"
  loop: "{{ range(1, nodes[node_type].count + 1, 1) |product(range(1, nodes[node_type].volumes + 1, 1))|list }}"
  tags:
    - instances
    - ceph-instances
    - infrastructure

- name: Wait for the ceph instances to become accessable
  wait_for:
    port: 22
    host: "{{ networks['external'].cidr_prefix }}.{{ last_octet[node_type][item.1] }}"
    search_regex: "OpenSSH"
    delay: 10
  with_nested:
    - "{{ networks['external'].cidr_prefix}}"
    - "{{ last_octet[node_type] }}"
  tags:
    - instances
    - ceph-instances
    - ceph-instance-check
    - infrastructure
  when: use_existing_ceph == "false" and instances | select('match', '.*ceph.*') | list | length < 3 and new_state=="present"

- name: Ensure {{ node_type }} cinder volumes for project {{ os_project }} are attached
  os_server_volume:
    state: "present"
    cloud: "{{ os_cluster }}"
    cacert: "{{ cacertfile }}"
    server: "{{ prefix}}-{{ node_type}}-{{ item[0] }}"
    volume: "{{ prefix}}-{{ node_type}}-{{ item[0]}}-v{{ item[1]}}"
    availability_zone: "{{ instance_az }}"
#  when: use_existing_ceph == "false" and openstack_servers | length < 13 and new_state=="present"
  when: use_existing_ceph == "false" and new_state=="present"
  loop: "{{ range(1, nodes[node_type].count + 1, 1) |product(range(1, nodes[node_type].volumes + 1, 1))|list }}"
  tags:
    - instances
    - ceph-instances
    - infrastructure

- name: Ensure {{ node_type }} cinder volumes for project {{ os_project }} are detached
  os_server_volume:
    state: "absent"
    cloud: "{{ os_cluster }}"
    cacert: "{{ cacertfile }}"
    server: "{{ prefix}}-{{ node_type}}-{{ item[0] }}"
    volume: "{{ prefix}}-{{ node_type}}-{{ item[0]}}-v{{ item[1]}}"
    availability_zone: "{{ instance_az }}"
  when: use_existing_ceph == "false" and new_state=="absent"
  loop: "{{ range(1, nodes[node_type].count + 1, 1) |product(range(1, nodes[node_type].volumes + 1, 1))|list }}"
  ignore_errors: True
  tags:
    - instances
    - ceph-instances
    - infrastructure

- name: Ensure {{ node_type }} cinder volumes for project {{ os_project }} are absent
  os_volume:
    state: "absent"
    cloud: "{{ os_cluster }}"
    cacert: "{{ cacertfile }}"
    display_name: "{{ prefix}}-{{ node_type}}-{{ item[0]}}-v{{ item[1]}}"
    size: "{{ nodes[node_type].volsize }}"
    availability_zone: "{{ instance_az }}"
  when: use_existing_ceph == "false" and new_state=="absent"
  loop: "{{ range(1, nodes[node_type].count + 1, 1) |product(range(1, nodes[node_type].volumes + 1, 1))|list }}"
  tags:
    - instances
    - ceph-instances
    - infrastructure

- name: Ensure {{ node_type }} instances for project {{ os_project }} are absent
  os_server:
    state: "absent"
    cloud: "{{ os_cluster }}"
    cacert: "{{ cacertfile }}"
    name: "{{ prefix}}-{{ node_type}}-{{ item }}"
    image: "{{ nodes[node_type].image }}"
    key_name: "{{ key_name }}"
    timeout: "{{ instance_creation_timeout }}"
    wait: "{{ nodes[node_type].wait }}"
    flavor: "{{ nodes[node_type].flavor }}"
    auto_ip: "{{ nodes[node_type].auto_ip }}"
    security_groups: "{{ nodes[node_type].secgroup }}"
    availability_zone: "{{ instance_az }}"
    nics:
      - port-name: "{{ prefix }}_external_{{ node_type }}_{{ item }}"
      - port-name: "{{ prefix }}_storage_{{ node_type }}_{{ item }}"
      - port-name: "{{ prefix }}_storagemgmt_{{ node_type }}_{{ item }}"
    meta:
      group: "{{ node_type }}"
  when: use_existing_ceph == "false" and new_state=="absent"
  with_sequence:
    count="{{nodes[node_type].count}}"
  tags:
    - instances
    - ceph-instances
    - infrastructure
